<?php

namespace App\Nova;

use Illuminate\Mail\Markdown;
use Laravel\Nova\Fields\BelongsTo;
use Laravel\Nova\Fields\ID;
use Illuminate\Http\Request;
use Laravel\Nova\Fields\Number;
use Laravel\Nova\Fields\Select;
use Laravel\Nova\Fields\Text;
use Laravel\Nova\Fields\Trix;
use Laravel\Nova\Http\Requests\NovaRequest;

class Vehicle extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var string
     */
    public static $model = 'App\Vehicle';

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public static $title = 'id';

    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'id',
    ];

    public static function label()
    {
        return 'Veículos'; // TODO: Change the autogenerated stub
    }

    public static $displayInNavigation = false;

    /**
     * Get the fields displayed by the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function fields(Request $request)
    {
        return [
            ID::make()->sortable()->onlyOnForms(),
            BelongsTo::make('Transportadora', 'transporter', Transporter::class),
            Select::make('Tipo')
                ->options([
                    'water' => 'Água',
                    'cement' => 'Cimento',
                    'cargo' => 'Baú',
                    'van' => 'Van',
                    'lowboy' => 'Lowboy',
                    'container' => 'Container',
                    'chemical' => 'Químico'
                ]),
            Text::make('Modelo', 'model'),
            Text::make('Placa', 'plate'),
            Number::make('Capacidade', 'capacity'),
            Number::make('Tamanho', 'length'),
            Number::make('Eixos', 'axles'),
            Text::make('Num. Frota', 'fleet_number'),
            \Laravel\Nova\Fields\Markdown::make('Notas', 'notes')
        ];
    }

    /**
     * Get the cards available for the request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function cards(Request $request)
    {
        return [];
    }

    /**
     * Get the filters available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function filters(Request $request)
    {
        return [];
    }

    /**
     * Get the lenses available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function lenses(Request $request)
    {
        return [];
    }

    /**
     * Get the actions available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function actions(Request $request)
    {
        return [];
    }
}
